[tox]
envlist = cov-init, py27-pyqt4, py35-pyqt5, cov-report

[testenv]
deps =
    -rrequirements.txt
    -rtest_requirements.txt
commands =
    coverage run --parallel-mode -m py.test -v {posargs}

# This testenv relies on Qt4 being installed system-wide, e.g. with an Ubuntu
# package, because PyQt4 is not available to `pip install` and CANNOT build in
# a virtualenv. However, it is still possible to have this one environment
# using site-packages, and to have others using PyQt5 on python3.
[testenv:py27-pyqt4]
# Use PyQt4 installed system-wide. tox is not automatically installing this.
sitepackages=True
# Python 2.7 needs the typing package to cope with the type imports that are
# needed for static type checking by mypy.
deps =
    typing
    {[testenv]deps}
# for pytest-qt
setenv =
    PYTEST_QT_API=pyqt4

# This testenv approximates QGIS 3 with Python 3 and PyQt 5.
# Luckily, PyQt5 can be pip installed.
[testenv:py35-pyqt5]
sitepackages=False
deps =
    PyQt5
    {[testenv]deps}
# for pytest-qt
setenv =
    PYTEST_QT_API=pyqt5

# Check types for the package in Python 2.
[testenv:py27-typing]
# mypy can check Python 2 types, but it doesn't run under Python 2.
# so it has to be installed outside the tox virtualenv.
whitelist_externals =
    mypy
commands =
    mypy --py2 because

# Check types for the package in Python 3.
# This is static checking, so only mypy itself is needed.
[testenv:py35-typing]
deps =
    mypy
commands =
    mypy because

# Erase any leftover data before running other environments.
[testenv:cov-init]
deps = coverage
commands =
    coverage erase

# After all other environments, combine data and generate an HTML report.
[testenv:cov-report]
deps = coverage
commands =
    coverage combine
    coverage html
